import os

# To run locally:
# snakemake --snakefile Snakefile_metadata --keep-going --cores 7  --configfile config.yaml --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on bioevo:
# change shakemake activation below if you are not Anna ;)
# source /local/gensoft2/exe/conda/3.19.0/conda/bin/activate snakemake && module load singularity/3.5.3
# snakemake --snakefile Snakefile_metadata --configfile config_tars.yaml --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p bioevo --qos=bioevo -A bioevo -J {params.name} -C avx2" --jobs 300

# To visualise the pipeline
# snakemake --snakefile Snakefile_metadata --configfile config.yaml --dag | dot -Tsvg > pipeline_metadata.svg


localrules: all

folder = os.path.abspath(config["folder"])
dates = config["dates"]

rule all:
    input:
        expand(os.path.join(folder, '{date}', 'metadata', 'metadata.tab'), date=dates),


rule matching_metadata:
    '''
    Extract metadata that corresponds to the tree ids.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'phylogenies', 'rooted_raxfast.duplicated.nwk'),
        locs = os.path.join(folder, '{date}', 'metadata', 'locations.tab'),
        dates = os.path.join(folder, '{date}', 'metadata', 'lsd2.dates'),
    output:
        tab = os.path.join(folder, '{date}', 'metadata', 'metadata.tab')
    threads: 1
    params:
        mem = 4000,
        name = 'metadata',
    singularity: "docker://evolbioinfo/pastml:v1.9.29.2"
    shell:
        """
        python3 py/submetadata.py --input_tree {input.tree} \
        --input_locs {input.locs} --input_dates {input.dates} \
        --output_tab {output.tab}
        """