import os
import shutil
from datetime import datetime

# To run locally:
# snakemake --snakefile Snakefile_phylogeography --keep-going --cores 7 --configfile config.yaml --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on bioevo:
# change shakemake activation below if you are not Anna ;)
# source /local/gensoft2/exe/conda/3.19.0/conda/bin/activate snakemake && module load singularity/3.5.3
# snakemake --snakefile Snakefile_phylogeography --configfile config_tars.yaml --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p bioevo --qos=bioevo -A bioevo -J {params.name}" --jobs 300

# To visualise the pipeline
# snakemake --snakefile Snakefile_phylogeography --configfile config.yaml --dag | dot -Tsvg > pipeline_phylogeography.svg


localrules: all, pastml_itol
ruleorder: pastml_vis_tree > pastml_vis > pastml_col

folder = os.path.abspath(config["folder"])
dates = config["dates"]
N = 5
freqs = ['genomic', 'phylogenetic']

rule all:
    input:
        expand(os.path.join(folder, '{date}', 'acr', 'map.{loc}.html'), loc=['country'], date=dates),
        expand(os.path.join(folder, '{date}', 'acr', 'compressed.country.raxfast.lsd2.html'), date=dates),
        expand(os.path.join(folder, '{date}', 'acr', '{type}.country.raxfast_subsampled_{freq}_{i}.lsd2.html'), date=dates, freq=freqs, i=range(N), type=['compressed', 'full']),
        expand(os.path.join(folder, '{date}', 'acr', 'pastml', 'itol_country', 'raxfast_subsampled_{freq}_{i}.lsd2', 'iTOL_url.txt'), date=dates, freq=freqs, i=range(N)),
        expand(os.path.join(folder, '{date}', 'metadata', 'pastml_country.tab'), date=dates),
#        expand(os.path.join(folder, '{date}', 'acr', 'compressed.country_{country}.raxfast_subsampled_{freq}_{i}.lsd2.html'), country=['France', 'USA', 'Italy', 'Iceland', 'Germany', 'Russia', 'Singapore'], date=dates, freq=freqs, i=range(N)),

rule pastml_col:
    '''
    ACR with PastML.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'timetrees', '{tree}.{dating}.nexus'),
        data = os.path.join(folder, '{date}', 'metadata', 'metadata.tab'),
        freqs = os.path.join(folder, '{date}', 'metadata', 'freqs_proportional_{col}.tab'),
    output:
        data = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}.{dating,lsd2|tt-[a-z]+}', 'combined_ancestral_states.tab'),
        pars = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}.{dating}', 'params.character_{col}.method_MPPA.model_F81.tab'),
        tree = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}.{dating}', 'named.tree_{tree}.{dating}.nwk'),
    threads: 2
    singularity: "docker://evolbioinfo/pastml:v1.9.29.4"
    params:
        mem = 4000,
        name = 'pastml_{col}.{tree}.{dating}_{date}',
        wd = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}.{dating}')
    shell:
        """
        echo "pastml --tree {input.tree} --data {input.data} --columns "{wildcards.col}" -v --work_dir "{params.wd}" --parameters {input.freqs} --smoothing --resolve_polytomies --reoptimise"
        pastml --tree {input.tree} --data {input.data} --columns "{wildcards.col}" -v --work_dir "{params.wd}" --parameters {input.freqs} --smoothing --resolve_polytomies --reoptimise
        """

rule pastml_vis:
    '''
    Visualisation with PastML.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}.{dating}', 'named.tree_{tree}.{dating}.nwk'),
        colours = os.path.join(folder, 'country_colours.tab'),
    output:
        map = os.path.join(folder, '{date}', 'acr', 'compressed.{col,country|region|intregion}.{tree}.{dating,lsd2|tt-[a-z]+}.html'),
    threads: 2
    singularity: "docker://evolbioinfo/pastml:v1.9.29.4"
    params:
        mem = 4000,
        name = 'pastml_{col}.{tree}.{dating}_vis_{date}',
        wd = os.path.join(folder, '{date}', 'acr', 'pastml', 'vis_{col}', '{tree}.{dating}'),
        qos = 'fast'
    shell:
        """
        pastml --tree {input.tree} -v --work_dir "{params.wd}" --html_compressed "{output.map}" \
        --columns "{wildcards.col}" --tip_size_threshold 15 --prediction_method COPY --colours {input.colours}

        rm -rf "{params.wd}"
        """

rule pastml_vis_tree:
    '''
    Visualisation with PastML.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}.{dating}', 'named.tree_{tree}.{dating}.nwk'),
        colours = os.path.join(folder, 'country_colours.tab'),
    output:
        map = os.path.join(folder, '{date}', 'acr', 'full.{col,country|region|intregion}.{tree}.{dating,lsd2|tt-[a-z]+}.html'),
    threads: 2
    singularity: "docker://evolbioinfo/pastml:v1.9.29.4"
    params:
        mem = 4000,
        name = 'pastml_{col}.{tree}.{dating}_vist_{date}',
        wd = os.path.join(folder, '{date}', 'acr', 'pastml', 'vist_{col}', '{tree}.{dating}'),
        qos = 'fast'
    shell:
        """
        pastml --tree {input.tree} -v --work_dir "{params.wd}" --html "{output.map}" \
        --columns "{wildcards.col}" --prediction_method COPY --colours {input.colours}

        rm -rf "{params.wd}"
        """

rule pastml_itol:
    '''
    Visualisation with iTOL.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'acr', 'pastml', '{col}', '{tree}', 'named.tree_{tree}.nwk'),
        colours = os.path.join(folder, 'country_colours.tab'),
    output:
        itol = os.path.join(folder, '{date}', 'acr', 'pastml', 'itol_{col}', '{tree}', 'iTOL_url.txt'),
        treeid = os.path.join(folder, '{date}', 'acr', 'pastml', 'itol_{col}', '{tree}', 'iTOL_tree_id.txt'),
    threads: 2
    singularity: "docker://evolbioinfo/pastml:v1.9.29.4"
    params:
        mem = 4000,
        name = 'pastml_{col}.{tree}_itol_{date}',
        wd = os.path.join(folder, '{date}', 'acr', 'pastml', 'itol_{col}', '{tree}'),
        qos = 'fast'
    shell:
        """
        pastml --tree {input.tree} -v --work_dir "{params.wd}"  \
        --columns "{wildcards.col}" --prediction_method COPY --colours {input.colours} \
        --upload_to_itol --itol_id ZxuhG2okfKLQnsgd5xAEGQ --itol_project phylocovid \
        --itol_tree_name "{wildcards.date}.{wildcards.tree}"
        """


rule pastml_vis_focused:
    '''
    Visualisation with PastML focused on a particular character state.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'acr', 'pastml', 'country', '{tree}.{dating}', 'named.tree_{tree}.{dating}.nwk'),
        colours = os.path.join(folder, 'country_colours.tab'),
    output:
        map = os.path.join(folder, '{date}', 'acr', 'compressed.country_{country}.{tree}.{dating,lsd2|tt-[a-z]+}.html'),
    threads: 2
    singularity: "docker://evolbioinfo/pastml:v1.9.29.4"
    params:
        mem = 4000,
        name = 'vis_country_{country}.{tree}.{dating}_{date}',
        wd = os.path.join(folder, '{date}', 'acr', 'pastml', 'vis_{country}', '{tree}.{dating}'),
        qos = 'fast'
    shell:
        """
        pastml --tree {input.tree} -v --work_dir "{params.wd}" --html_compressed "{output.map}" \
        --columns country --tip_size_threshold 15 --prediction_method COPY --colours {input.colours} \
        --focus "{wildcards.country}"

        rm -rf "{params.wd}"
        """

rule geomap:
    '''
    Reconstructs the geographical map coloured according to PastML categories.
    '''
    input:
        data = os.path.join(folder, '{date}', 'metadata', 'metadata.tab'),
    output:
        geo_map = os.path.join(folder, '{date}', 'acr', 'map.{loc}.html'),
    threads: 1
    params:
        mem = 4000,
        name = 'geomap_{loc}_{date}'
    singularity: "docker://evolbioinfo/pastml:v1.9.28.1"
    shell:
        """
        geomap --data {input.data} --html {output.geo_map} --location {wildcards.loc} --country iso2
        """


rule pastml_stats:
    '''
    Calculates statistics.
    '''
    input:
        freqs = os.path.join(folder, '{date}', 'metadata', 'freqs_proportional_{col}.tab'),
        pars_pd = expand(os.path.join(folder, '{{date}}', 'acr', 'pastml', '{{col}}', 'raxfast_subsampled_phylogenetic_{i}.lsd2', 'params.character_{{col}}.method_MPPA.model_F81.tab'), i=range(N)),
        pars_g = expand(os.path.join(folder, '{{date}}', 'acr', 'pastml', '{{col}}', 'raxfast_subsampled_genomic_{i}.lsd2', 'params.character_{{col}}.method_MPPA.model_F81.tab'), i=range(N)),
    output:
        stats = os.path.join(folder, '{date}', 'metadata', 'pastml_{col}.tab'),
    params:
        mem = 2000,
        name = 'pastats_{date}',
        qos = 'fast',
        labels = ['PD_{}'.format(i) for i in range(N)] + ['G_{}'.format(i) for i in range(N)]
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6richer"
    shell:
        """
        python3 py/pastml_stats.py --freqs {input.freqs} --labels {params.labels} \
        --pastml_freqs {input.pars_pd} {input.pars_g} --col {wildcards.col} \
        --output_stats {output.stats}
        """