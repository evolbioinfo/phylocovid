import os

# To run locally:
# snakemake --snakefile Snakefile_dating --keep-going --cores 7 --configfile config.yaml --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on bioevo:
# change shakemake activation below if you are not Anna ;)
# source /local/gensoft2/exe/conda/3.19.0/conda/bin/activate snakemake && module load singularity/3.5.3
# snakemake --snakefile Snakefile_dating --configfile config_tars.yaml --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p bioevo --qos=bioevo -A bioevo -J {params.name}" --jobs 300
# to run on common:
# snakemake --snakefile Snakefile_dating --configfile config_tars.yaml --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p common,dedicated --qos=fast -A bioevo -J {params.name} -C avx2" --jobs 300


# To visualise the pipeline
# snakemake --snakefile Snakefile_dating --configfile config.yaml --dag | dot -Tsvg > pipeline_dating.svg


localrules: all, upload_to_itol

N=5

folder = os.path.abspath(config["folder"])
dates = config["dates"]

# Input tree:
#   * pruned tips without dates
#   * rooted on the extremity (dist=0 from MRCA) of the branch separating the MRCA of the sequences from [Li et al. (2020). Similarities and Evolutionary Relationships of COVID-19 and Related Viruses. http://arxiv.org/abs/2003.05580]
#   * collapsed branches <= 1/2 mut/site (for external ones like that, set to zero)
# LSD2:
#   * allow to set any branch to zero: -u 0
#   * no variance
#   * -m 33% of tips


rule all:
    input:
        expand(os.path.join(folder, '{date}', 'timetrees', 'raxfast.lsd2.itol'), date=dates),


rule tree_size:
    '''
    Calculates tree size.
    '''
    input:
        tree = os.path.join(folder, '{date}', '{type}', '{tree}.nwk'),
    output:
        length = os.path.join(folder, '{date}', '{type}', '{tree}.ntips'),
    singularity:
        "docker://evolbioinfo/gotree:v0.3.0b"
    params:
        mem = 2000,
        name = 'tree_size_{date}',
        qos = 'fast'
    threads: 1
    shell:
        """
        gotree stats -i {input.tree} | tail -n 1 | awk '{{print $3}}' > {output.length}
        """

rule nex2nwk:
    '''
    Converts a nexus tree to newick.
    '''
    input:
        tree = os.path.join(folder, '{date}', 'timetrees', '{tree}.nexus'),
    output:
        tree = os.path.join(folder, '{date}', 'timetrees', '{tree}.nwk'),
    singularity: "docker://evolbioinfo/gotree:v0.3.0b"
    params:
        mem = 2000,
        name = 'nex2nwk_{tree}_{date}',
    threads: 1
    shell:
        """
        gotree reformat newick -i {input.tree} -f nexus -o {output.tree}
        sed -i -e 's/\\[[^]]*\\]//g' {output.tree}
        """


rule date_lsd2:
    '''
    Dates a tree.
    -u 0
    no -v
    -m 33%
    '''
    input:
        tree = os.path.join(folder, '{date}', 'phylogenies', 'rooted_{tree}.duplicated.has_dates.collapsed.zscore.no_outliers.nwk'),
        ntips = os.path.join(folder, '{date}', 'phylogenies', 'rooted_{tree}.duplicated.has_dates.collapsed.zscore.no_outliers.ntips'),
        dates = os.path.join(folder, '{date}', 'metadata', 'lsd2.dates'),
        length = os.path.join(folder, '{date}', 'alignments', 'aln.length')
    output:
        tree = os.path.join(folder, '{date}', 'timetrees', '{tree}.lsd2.nexus'),
        log = os.path.join(folder, '{date}', 'timetrees', '{tree}.lsd2.log'),
        rd = os.path.join(folder, '{date}', 'timetrees', '{tree}.lsd2.rootdate'),
        outliers = os.path.join(folder, '{date}', 'timetrees', '{tree}.duplicated.has_dates.collapsed.zscore.no_outliers.lsd2.outliers'),
    threads: 1
    singularity: "docker://evolbioinfo/lsd2:v1.6.5"
    params:
        mem = 4000,
        name = 'lsd2_{tree}_{date}',
        wd = os.path.join(folder, '{date}', 'timetrees', '{tree}.wd_lsd2')
    shell:
        """
        n=`head {input.length}`
        t=`head {input.ntips}`
        m=`awk -v t="$t" 'BEGIN {{ m=int(t * 0.33); print m}}'`

        echo "lsd2 -i {input.tree} -d {input.dates} -c -s $n -o {params.wd} -f 1000 -l 0 -R 366 -e 3 -m $m -u 0 -U 0"

        lsd2 -i {input.tree} -d {input.dates} -c -s $n -o {params.wd}  -f 1000 -l 0 -R 366 -e 3 -m $m -u 0 -U 0

        pattern_g='\\- The input dates associated with the following'
        pattern_s='\\- The input dates associated with the following [0-9]* nodes are considered as outliers, so the nodes were removed from the analysis:  '

        outliers=`grep -i "$pattern_g" {params.wd} | sed -e "s/$pattern_s//g"`
        for o in $outliers
        do
            echo $o >> {output.outliers}
        done

        mv "{params.wd}.date.nexus" "{output.tree}"
        mv "{params.wd}" "{output.log}"
        rm -rf {params.wd}*

        echo `grep "], tMRCA" {output.log} | sed -e 's/rate [0-9\\.e+-]\\+ \\[[0-9\\.e+-]\\+; [0-9\\.e+-]\\+\\], tMRCA //g' \
        | sed -e 's/ \\[[0-9\\.e+-]\\+; [0-9\\.e+-]\\+\\], objective function [0-9\\.e+-]\\+//g'` > {output.rd}
        """


rule upload_to_itol:
    '''
    Uploads a tree to iTOL.
    '''
    input:
        tree = os.path.join(folder, '{date}', '{type}', '{tree}.nwk'),
    output:
        log = os.path.join(folder, '{date}', '{type}', '{tree}.itol'),
    singularity:
        "docker://evolbioinfo/gotree:v0.3.0b"
    params:
        mem = 2000,
        name = 'itol_{tree}_{date}',
        qos = 'fast',
        tree_name = '{date}_{type}_{tree}'
    threads: 1
    shell:
        """
        gotree upload itol -i {input.tree} --project phylocovid --user-id ZxuhG2okfKLQnsgd5xAEGQ \
        --name "{params.tree_name}" > {output.log}
        """
